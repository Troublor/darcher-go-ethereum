// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: blockchain_status_service.proto

package rpc

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ChainHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role   Role     `protobuf:"varint,1,opt,name=role,proto3,enum=darcher.Role" json:"role,omitempty"`
	Hash   string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Number uint64   `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Td     uint64   `protobuf:"varint,4,opt,name=td,proto3" json:"td,omitempty"`
	Txs    []string `protobuf:"bytes,5,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *ChainHead) Reset() {
	*x = ChainHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_status_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainHead) ProtoMessage() {}

func (x *ChainHead) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_status_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainHead.ProtoReflect.Descriptor instead.
func (*ChainHead) Descriptor() ([]byte, []int) {
	return file_blockchain_status_service_proto_rawDescGZIP(), []int{0}
}

func (x *ChainHead) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_DOER
}

func (x *ChainHead) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ChainHead) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *ChainHead) GetTd() uint64 {
	if x != nil {
		return x.Td
	}
	return 0
}

func (x *ChainHead) GetTxs() []string {
	if x != nil {
		return x.Txs
	}
	return nil
}

type ChainSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role   Role     `protobuf:"varint,1,opt,name=role,proto3,enum=darcher.Role" json:"role,omitempty"`
	Hash   string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Number uint64   `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Td     uint64   `protobuf:"varint,4,opt,name=td,proto3" json:"td,omitempty"`
	Txs    []string `protobuf:"bytes,5,rep,name=txs,proto3" json:"txs,omitempty"`
}

func (x *ChainSide) Reset() {
	*x = ChainSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_status_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainSide) ProtoMessage() {}

func (x *ChainSide) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_status_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainSide.ProtoReflect.Descriptor instead.
func (*ChainSide) Descriptor() ([]byte, []int) {
	return file_blockchain_status_service_proto_rawDescGZIP(), []int{1}
}

func (x *ChainSide) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_DOER
}

func (x *ChainSide) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ChainSide) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *ChainSide) GetTd() uint64 {
	if x != nil {
		return x.Td
	}
	return 0
}

func (x *ChainSide) GetTxs() []string {
	if x != nil {
		return x.Txs
	}
	return nil
}

type Tx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role   Role   `protobuf:"varint,1,opt,name=role,proto3,enum=darcher.Role" json:"role,omitempty"`
	Hash   string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Sender string `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	Nonce  uint64 `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *Tx) Reset() {
	*x = Tx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_status_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tx) ProtoMessage() {}

func (x *Tx) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_status_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tx.ProtoReflect.Descriptor instead.
func (*Tx) Descriptor() ([]byte, []int) {
	return file_blockchain_status_service_proto_rawDescGZIP(), []int{2}
}

func (x *Tx) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_DOER
}

func (x *Tx) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Tx) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Tx) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type GetChainHeadControlMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role Role       `protobuf:"varint,1,opt,name=role,proto3,enum=darcher.Role" json:"role,omitempty"`
	Id   string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Head *ChainHead `protobuf:"bytes,3,opt,name=head,proto3" json:"head,omitempty"`
	Err  Error      `protobuf:"varint,4,opt,name=err,proto3,enum=darcher.Error" json:"err,omitempty"`
}

func (x *GetChainHeadControlMsg) Reset() {
	*x = GetChainHeadControlMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_status_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainHeadControlMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainHeadControlMsg) ProtoMessage() {}

func (x *GetChainHeadControlMsg) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_status_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainHeadControlMsg.ProtoReflect.Descriptor instead.
func (*GetChainHeadControlMsg) Descriptor() ([]byte, []int) {
	return file_blockchain_status_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetChainHeadControlMsg) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_DOER
}

func (x *GetChainHeadControlMsg) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetChainHeadControlMsg) GetHead() *ChainHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *GetChainHeadControlMsg) GetErr() Error {
	if x != nil {
		return x.Err
	}
	return Error_NilErr
}

var File_blockchain_status_service_proto protoreflect.FileDescriptor

var file_blockchain_status_service_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x74,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x78, 0x73, 0x22, 0x7c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x69, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x74, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x78, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x74, 0x78,
	0x73, 0x22, 0x69, 0x0a, 0x02, 0x54, 0x78, 0x12, 0x21, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x95, 0x01, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x68, 0x65,
	0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68,
	0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65,
	0x61, 0x64, 0x12, 0x20, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x32, 0xb7, 0x02, 0x0a, 0x17, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x44, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x12, 0x12, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x44, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x12, 0x12, 0x2e, 0x64,
	0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x69, 0x64, 0x65,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x36, 0x0a, 0x0b,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x65, 0x77, 0x54, 0x78, 0x12, 0x0b, 0x2e, 0x64, 0x61,
	0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x28, 0x01, 0x12, 0x58, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x1f, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x73, 0x67, 0x1a, 0x1f, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x38,
	0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x72, 0x6f,
	0x75, 0x62, 0x6c, 0x6f, 0x72, 0x2f, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2d, 0x67, 0x6f,
	0x2d, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blockchain_status_service_proto_rawDescOnce sync.Once
	file_blockchain_status_service_proto_rawDescData = file_blockchain_status_service_proto_rawDesc
)

func file_blockchain_status_service_proto_rawDescGZIP() []byte {
	file_blockchain_status_service_proto_rawDescOnce.Do(func() {
		file_blockchain_status_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_blockchain_status_service_proto_rawDescData)
	})
	return file_blockchain_status_service_proto_rawDescData
}

var file_blockchain_status_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_blockchain_status_service_proto_goTypes = []interface{}{
	(*ChainHead)(nil),              // 0: darcher.ChainHead
	(*ChainSide)(nil),              // 1: darcher.ChainSide
	(*Tx)(nil),                     // 2: darcher.Tx
	(*GetChainHeadControlMsg)(nil), // 3: darcher.GetChainHeadControlMsg
	(Role)(0),                      // 4: darcher.Role
	(Error)(0),                     // 5: darcher.Error
	(*empty.Empty)(nil),            // 6: google.protobuf.Empty
}
var file_blockchain_status_service_proto_depIdxs = []int32{
	4,  // 0: darcher.ChainHead.role:type_name -> darcher.Role
	4,  // 1: darcher.ChainSide.role:type_name -> darcher.Role
	4,  // 2: darcher.Tx.role:type_name -> darcher.Role
	4,  // 3: darcher.GetChainHeadControlMsg.role:type_name -> darcher.Role
	0,  // 4: darcher.GetChainHeadControlMsg.head:type_name -> darcher.ChainHead
	5,  // 5: darcher.GetChainHeadControlMsg.err:type_name -> darcher.Error
	0,  // 6: darcher.BlockchainStatusService.notifyNewChainHead:input_type -> darcher.ChainHead
	1,  // 7: darcher.BlockchainStatusService.notifyNewChainSide:input_type -> darcher.ChainSide
	2,  // 8: darcher.BlockchainStatusService.notifyNewTx:input_type -> darcher.Tx
	3,  // 9: darcher.BlockchainStatusService.getHeadControl:input_type -> darcher.GetChainHeadControlMsg
	6,  // 10: darcher.BlockchainStatusService.notifyNewChainHead:output_type -> google.protobuf.Empty
	6,  // 11: darcher.BlockchainStatusService.notifyNewChainSide:output_type -> google.protobuf.Empty
	6,  // 12: darcher.BlockchainStatusService.notifyNewTx:output_type -> google.protobuf.Empty
	3,  // 13: darcher.BlockchainStatusService.getHeadControl:output_type -> darcher.GetChainHeadControlMsg
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_blockchain_status_service_proto_init() }
func file_blockchain_status_service_proto_init() {
	if File_blockchain_status_service_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_blockchain_status_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_status_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_status_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_status_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainHeadControlMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blockchain_status_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blockchain_status_service_proto_goTypes,
		DependencyIndexes: file_blockchain_status_service_proto_depIdxs,
		MessageInfos:      file_blockchain_status_service_proto_msgTypes,
	}.Build()
	File_blockchain_status_service_proto = out.File
	file_blockchain_status_service_proto_rawDesc = nil
	file_blockchain_status_service_proto_goTypes = nil
	file_blockchain_status_service_proto_depIdxs = nil
}
