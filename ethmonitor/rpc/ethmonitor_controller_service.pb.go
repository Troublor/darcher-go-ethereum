// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: ethmonitor_controller_service.proto

package rpc

import (
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TxReceivedMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *TxReceivedMsg) Reset() {
	*x = TxReceivedMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethmonitor_controller_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxReceivedMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxReceivedMsg) ProtoMessage() {}

func (x *TxReceivedMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ethmonitor_controller_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxReceivedMsg.ProtoReflect.Descriptor instead.
func (*TxReceivedMsg) Descriptor() ([]byte, []int) {
	return file_ethmonitor_controller_service_proto_rawDescGZIP(), []int{0}
}

func (x *TxReceivedMsg) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type TxFinishedMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *TxFinishedMsg) Reset() {
	*x = TxFinishedMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethmonitor_controller_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxFinishedMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxFinishedMsg) ProtoMessage() {}

func (x *TxFinishedMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ethmonitor_controller_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxFinishedMsg.ProtoReflect.Descriptor instead.
func (*TxFinishedMsg) Descriptor() ([]byte, []int) {
	return file_ethmonitor_controller_service_proto_rawDescGZIP(), []int{1}
}

func (x *TxFinishedMsg) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type TxTraverseStartMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *TxTraverseStartMsg) Reset() {
	*x = TxTraverseStartMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethmonitor_controller_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxTraverseStartMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxTraverseStartMsg) ProtoMessage() {}

func (x *TxTraverseStartMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ethmonitor_controller_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxTraverseStartMsg.ProtoReflect.Descriptor instead.
func (*TxTraverseStartMsg) Descriptor() ([]byte, []int) {
	return file_ethmonitor_controller_service_proto_rawDescGZIP(), []int{2}
}

func (x *TxTraverseStartMsg) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type TxStateChangeMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string  `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	From TxState `protobuf:"varint,2,opt,name=from,proto3,enum=darcher.TxState" json:"from,omitempty"`
	To   TxState `protobuf:"varint,3,opt,name=to,proto3,enum=darcher.TxState" json:"to,omitempty"`
}

func (x *TxStateChangeMsg) Reset() {
	*x = TxStateChangeMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethmonitor_controller_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxStateChangeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxStateChangeMsg) ProtoMessage() {}

func (x *TxStateChangeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ethmonitor_controller_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxStateChangeMsg.ProtoReflect.Descriptor instead.
func (*TxStateChangeMsg) Descriptor() ([]byte, []int) {
	return file_ethmonitor_controller_service_proto_rawDescGZIP(), []int{3}
}

func (x *TxStateChangeMsg) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TxStateChangeMsg) GetFrom() TxState {
	if x != nil {
		return x.From
	}
	return TxState_CREATED
}

func (x *TxStateChangeMsg) GetTo() TxState {
	if x != nil {
		return x.To
	}
	return TxState_CREATED
}

type TxStateControlMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash         string  `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	CurrentState TxState `protobuf:"varint,2,opt,name=current_state,json=currentState,proto3,enum=darcher.TxState" json:"current_state,omitempty"`
	NextState    TxState `protobuf:"varint,3,opt,name=next_state,json=nextState,proto3,enum=darcher.TxState" json:"next_state,omitempty"`
}

func (x *TxStateControlMsg) Reset() {
	*x = TxStateControlMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethmonitor_controller_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxStateControlMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxStateControlMsg) ProtoMessage() {}

func (x *TxStateControlMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ethmonitor_controller_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxStateControlMsg.ProtoReflect.Descriptor instead.
func (*TxStateControlMsg) Descriptor() ([]byte, []int) {
	return file_ethmonitor_controller_service_proto_rawDescGZIP(), []int{4}
}

func (x *TxStateControlMsg) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TxStateControlMsg) GetCurrentState() TxState {
	if x != nil {
		return x.CurrentState
	}
	return TxState_CREATED
}

func (x *TxStateControlMsg) GetNextState() TxState {
	if x != nil {
		return x.NextState
	}
	return TxState_CREATED
}

type SelectTxControlMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CandidateHashes []string `protobuf:"bytes,1,rep,name=candidate_hashes,json=candidateHashes,proto3" json:"candidate_hashes,omitempty"`
	Selection       string   `protobuf:"bytes,2,opt,name=selection,proto3" json:"selection,omitempty"`
}

func (x *SelectTxControlMsg) Reset() {
	*x = SelectTxControlMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethmonitor_controller_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectTxControlMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectTxControlMsg) ProtoMessage() {}

func (x *SelectTxControlMsg) ProtoReflect() protoreflect.Message {
	mi := &file_ethmonitor_controller_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectTxControlMsg.ProtoReflect.Descriptor instead.
func (*SelectTxControlMsg) Descriptor() ([]byte, []int) {
	return file_ethmonitor_controller_service_proto_rawDescGZIP(), []int{5}
}

func (x *SelectTxControlMsg) GetCandidateHashes() []string {
	if x != nil {
		return x.CandidateHashes
	}
	return nil
}

func (x *SelectTxControlMsg) GetSelection() string {
	if x != nil {
		return x.Selection
	}
	return ""
}

var File_ethmonitor_controller_service_proto protoreflect.FileDescriptor

var file_ethmonitor_controller_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x65, 0x74, 0x68, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a, 0x0d, 0x54, 0x78, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x23, 0x0a,
	0x0d, 0x54, 0x78, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x22, 0x28, 0x0a, 0x12, 0x54, 0x78, 0x54, 0x72, 0x61, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x6e, 0x0a, 0x10,
	0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x73, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x8f, 0x01, 0x0a,
	0x11, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d,
	0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x35, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a,
	0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5d,
	0x0a, 0x12, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x4d, 0x73, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xf2, 0x04,
	0x0a, 0x1b, 0x45, 0x74, 0x68, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a,
	0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x78, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x12, 0x16, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x78, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x16, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65,
	0x72, 0x2e, 0x54, 0x78, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x15, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x54, 0x78, 0x54, 0x72, 0x61, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x1b, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x54,
	0x72, 0x61, 0x76, 0x65, 0x72, 0x73, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x73, 0x67, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x16, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4d, 0x73, 0x67, 0x12, 0x19, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x78,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x73, 0x67, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0f, 0x61, 0x73, 0x6b, 0x46,
	0x6f, 0x72, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x64, 0x61,
	0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x73, 0x67, 0x1a, 0x1a, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65,
	0x72, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54,
	0x78, 0x12, 0x1b, 0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x54, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x73, 0x67, 0x1a, 0x1b,
	0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54,
	0x78, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x73, 0x67, 0x22, 0x00, 0x12, 0x3e, 0x0a,
	0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x78, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x13,
	0x2e, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a,
	0x1b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x2e, 0x64,
	0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x56,
	0x75, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x54, 0x72, 0x6f, 0x75, 0x62, 0x6c, 0x6f, 0x72, 0x2f, 0x64, 0x61, 0x72, 0x63, 0x68, 0x65,
	0x72, 0x2d, 0x67, 0x6f, 0x2d, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2f, 0x65, 0x74,
	0x68, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ethmonitor_controller_service_proto_rawDescOnce sync.Once
	file_ethmonitor_controller_service_proto_rawDescData = file_ethmonitor_controller_service_proto_rawDesc
)

func file_ethmonitor_controller_service_proto_rawDescGZIP() []byte {
	file_ethmonitor_controller_service_proto_rawDescOnce.Do(func() {
		file_ethmonitor_controller_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_ethmonitor_controller_service_proto_rawDescData)
	})
	return file_ethmonitor_controller_service_proto_rawDescData
}

var file_ethmonitor_controller_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ethmonitor_controller_service_proto_goTypes = []interface{}{
	(*TxReceivedMsg)(nil),      // 0: darcher.TxReceivedMsg
	(*TxFinishedMsg)(nil),      // 1: darcher.TxFinishedMsg
	(*TxTraverseStartMsg)(nil), // 2: darcher.TxTraverseStartMsg
	(*TxStateChangeMsg)(nil),   // 3: darcher.TxStateChangeMsg
	(*TxStateControlMsg)(nil),  // 4: darcher.TxStateControlMsg
	(*SelectTxControlMsg)(nil), // 5: darcher.SelectTxControlMsg
	(TxState)(0),               // 6: darcher.TxState
	(*TxErrorMsg)(nil),         // 7: darcher.TxErrorMsg
	(*ContractVulReport)(nil),  // 8: darcher.ContractVulReport
	(*empty.Empty)(nil),        // 9: google.protobuf.Empty
}
var file_ethmonitor_controller_service_proto_depIdxs = []int32{
	6,  // 0: darcher.TxStateChangeMsg.from:type_name -> darcher.TxState
	6,  // 1: darcher.TxStateChangeMsg.to:type_name -> darcher.TxState
	6,  // 2: darcher.TxStateControlMsg.current_state:type_name -> darcher.TxState
	6,  // 3: darcher.TxStateControlMsg.next_state:type_name -> darcher.TxState
	0,  // 4: darcher.EthmonitorControllerService.notifyTxReceived:input_type -> darcher.TxReceivedMsg
	1,  // 5: darcher.EthmonitorControllerService.notifyTxFinished:input_type -> darcher.TxFinishedMsg
	2,  // 6: darcher.EthmonitorControllerService.notifyTxTraverseStart:input_type -> darcher.TxTraverseStartMsg
	3,  // 7: darcher.EthmonitorControllerService.notifyTxStateChangeMsg:input_type -> darcher.TxStateChangeMsg
	4,  // 8: darcher.EthmonitorControllerService.askForNextState:input_type -> darcher.TxStateControlMsg
	5,  // 9: darcher.EthmonitorControllerService.selectTx:input_type -> darcher.SelectTxControlMsg
	7,  // 10: darcher.EthmonitorControllerService.notifyTxError:input_type -> darcher.TxErrorMsg
	8,  // 11: darcher.EthmonitorControllerService.notifyContractVulnerability:input_type -> darcher.ContractVulReport
	9,  // 12: darcher.EthmonitorControllerService.notifyTxReceived:output_type -> google.protobuf.Empty
	9,  // 13: darcher.EthmonitorControllerService.notifyTxFinished:output_type -> google.protobuf.Empty
	9,  // 14: darcher.EthmonitorControllerService.notifyTxTraverseStart:output_type -> google.protobuf.Empty
	9,  // 15: darcher.EthmonitorControllerService.notifyTxStateChangeMsg:output_type -> google.protobuf.Empty
	4,  // 16: darcher.EthmonitorControllerService.askForNextState:output_type -> darcher.TxStateControlMsg
	5,  // 17: darcher.EthmonitorControllerService.selectTx:output_type -> darcher.SelectTxControlMsg
	9,  // 18: darcher.EthmonitorControllerService.notifyTxError:output_type -> google.protobuf.Empty
	9,  // 19: darcher.EthmonitorControllerService.notifyContractVulnerability:output_type -> google.protobuf.Empty
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_ethmonitor_controller_service_proto_init() }
func file_ethmonitor_controller_service_proto_init() {
	if File_ethmonitor_controller_service_proto != nil {
		return
	}
	file_common_proto_init()
	file_contract_oracle_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ethmonitor_controller_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxReceivedMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethmonitor_controller_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxFinishedMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethmonitor_controller_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxTraverseStartMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethmonitor_controller_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxStateChangeMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethmonitor_controller_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxStateControlMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethmonitor_controller_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectTxControlMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ethmonitor_controller_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ethmonitor_controller_service_proto_goTypes,
		DependencyIndexes: file_ethmonitor_controller_service_proto_depIdxs,
		MessageInfos:      file_ethmonitor_controller_service_proto_msgTypes,
	}.Build()
	File_ethmonitor_controller_service_proto = out.File
	file_ethmonitor_controller_service_proto_rawDesc = nil
	file_ethmonitor_controller_service_proto_goTypes = nil
	file_ethmonitor_controller_service_proto_depIdxs = nil
}
